{"version":3,"sources":["components/Header.js","components/AddOption.js","components/Action.js","components/Option.js","components/Options.js","components/OptionModal.js","container/IndecisionApp.js","index.js"],"names":["Header","_ref","title","subtitle","react_default","a","createElement","className","defaultProps","AddOption","state","error","undefined","handleFormSubmit","e","preventDefault","option","target","elements","value","trim","_this","props","onAddOption","setState","this","onSubmit","type","name","style","borderColor","React","Component","Actions","hasOptions","onMakeDecision","disabled","onClick","Option","onRemoveOption","count","Options","options","onRemoveAll","map","index","components_Option","key","OptionModal","onCloseModal","selectedOption","showModal","lib_default","isOpen","onRequestClose","contentLabel","closeTimeoutMS","Modal","setAppElement","IndecisionApp","defaultOptions","addOptionRef","createRef","indexOf","concat","current","random","Math","floor","length","optionToRemove","newOptions","filter","componentDidMount","storedOptions","JSON","parse","localStorage","getItem","componentDidUpdate","prevProps","prevState","setItem","stringify","componentWillUnmount","console","log","components_Header","Action","components_Options","components_AddOption","ref","components_OptionModal","ReactDOM","render","container_IndecisionApp","document","getElementById"],"mappings":"gOAGMA,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,SAAV,OACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBL,GAC9BC,GAAYC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAoBJ,MAMrDH,EAAOQ,aAAe,CACpBN,MAAO,cAGMF,QCiBAS,6MA/BbC,MAAQ,CACNC,WAAOC,KAGTC,iBAAmB,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAASF,EAAEG,OAAOC,SAASF,OAAOG,MAAMC,OACxCT,EAAQU,EAAKC,MAAMC,YAAYP,GAErCK,EAAKG,SAAS,iBAAO,CAAEb,MAAOA,KAEzBA,IACHG,EAAEG,OAAOC,SAASF,OAAOG,MAAQ,6EAKnC,OACEf,EAAAC,EAAAC,cAAA,WACGmB,KAAKf,MAAMC,OAASP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBkB,KAAKf,MAAMC,OACjEP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAamB,SAAUD,KAAKZ,kBACzCY,KAAKf,MAAMC,MACRP,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBoB,KAAK,OAAOC,KAAK,SAASC,MAAO,CAAEC,YAAa,SACrF1B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBoB,KAAK,OAAOC,KAAK,WAC1DxB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,uBAzBcwB,IAAMC,WCWfC,EAXC,SAAAhC,GAAA,IAAGiC,EAAHjC,EAAGiC,WAAYC,EAAflC,EAAekC,eAAf,OACd/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,aACV6B,UAAWF,EACXG,QAASF,GAHX,uBCUWG,EAZA,SAAArC,GAAA,IAAGe,EAAHf,EAAGe,OAAQuB,EAAXtC,EAAWsC,eAAgBC,EAA3BvC,EAA2BuC,MAA3B,OACbpC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBiC,EAA7B,KAAsCxB,GACtCZ,EAAAC,EAAAC,cAAA,UACEC,UAAU,sBACV8B,QAAS,kBAAME,EAAevB,KAFhC,YCoBWyB,EAtBC,SAAAxC,GAAA,IAAGiC,EAAHjC,EAAGiC,WAAYQ,EAAfzC,EAAeyC,QAASC,EAAxB1C,EAAwB0C,YAAaJ,EAArCtC,EAAqCsC,eAArC,OACdnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,gBACAH,EAAAC,EAAAC,cAAA,UACEC,UAAU,sBACV6B,UAAWF,EACXG,QAASM,GAHX,gBAMAT,GAAc9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,uCAEfmC,EAAQE,IAAI,SAAC5B,EAAQ6B,GAAT,OACXzC,EAAAC,EAAAC,cAACwC,EAAD,CACEC,IAAK/B,EACLA,OAAQA,EACRwB,MAAOK,EAAQ,EACfN,eAAgBA,wBCcTS,EAfK,SAAA/C,GAAA,IAAGgD,EAAHhD,EAAGgD,aAAcC,EAAjBjD,EAAiBiD,eAAgBC,EAAjClD,EAAiCkD,UAAjC,OAClB/C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEgD,OAAQF,EACRG,eAAgBL,EAChBM,aAAa,kBACbC,eAAgB,IAEhBjD,UAAU,SAEVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,mBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAe2C,GAC5B9C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAAS8B,QAASY,GAApC,UCtBJQ,IAAMC,cAAc,aAEdC,6MACJjD,MAAQ,CACNgC,QAASrB,EAAKC,MAAMsC,eACpBV,oBAAgBtC,EAChBuC,WAAW,KAGbU,aAAe9B,IAAM+B,cAGrBvC,YAAc,SAACP,GACb,OAAKA,EAEMK,EAAKX,MAAMgC,QAAQqB,QAAQ/C,IAAW,EACxC,mCAGTK,EAAKG,SAAS,iBAAO,CAAEkB,QAASrB,EAAKX,MAAMgC,QAAQsB,OAAOhD,MALjD,mCAQX2B,YAAc,WACZtB,EAAKG,SAAS,iBAAO,CAAEkB,QAAS,MAChCrB,EAAKwC,aAAaI,QAAQzC,SAAS,iBAAO,CAAEb,WAAOC,QAGrDuB,eAAiB,WACf,IAAM+B,EAASC,KAAKC,MAAMD,KAAKD,SAAW7C,EAAKX,MAAMgC,QAAQ2B,QAC7DhD,EAAKG,SAAS,iBAAO,CACnB0B,eAAgB7B,EAAKX,MAAMgC,QAAQwB,GACnCf,WAAW,QAIfZ,eAAiB,SAAC+B,GAChB,IAAMC,EAAalD,EAAKX,MAAMgC,QAAQ8B,OAAO,SAAAxD,GAAM,OAAIA,IAAWsD,IAClEjD,EAAKG,SAAS,iBAAO,CAAEkB,QAAS6B,QAGlCtB,aAAe,WACb5B,EAAKG,SAAS,iBAAO,CAAE2B,WAAW,QAKpCsB,kBAAoB,WAClB,IACE,IAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,YAChC,OAAlBJ,GACFrD,EAAKG,SAAS,iBAAO,CAAEkB,QAASgC,KAElC,MAAO5D,QAKXiE,mBAAqB,SAACC,EAAWC,GAC3BA,EAAUvC,QAAQ2B,SAAWhD,EAAKX,MAAMgC,QAAQ2B,QAClDQ,aAAaK,QAAQ,UAAWP,KAAKQ,UAAU9D,EAAKX,MAAMgC,aAI9D0C,qBAAuB,WACrBC,QAAQC,IAAI,wFAKZ,IACMpD,EAAaT,KAAKf,MAAMgC,QAAQ2B,OAAS,EAC/C,OACEjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiF,EAAD,CACEpF,SALW,6CAMbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACkF,EAAD,CACEtD,WAAYA,EACZC,eAAgBV,KAAKU,iBACvB/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACmF,EAAD,CACEvD,WAAYA,EACZQ,QAASjB,KAAKf,MAAMgC,QACpBC,YAAalB,KAAKkB,YAClBJ,eAAgBd,KAAKc,iBACvBnC,EAAAC,EAAAC,cAACoF,EAAD,CACEC,IAAKlE,KAAKoC,aACVtC,YAAaE,KAAKF,gBAGxBnB,EAAAC,EAAAC,cAACsF,EAAD,CACE3C,aAAcxB,KAAKwB,aACnBC,eAAgBzB,KAAKf,MAAMwC,eAC3BC,UAAW1B,KAAKf,MAAMyC,oBA3FJpB,IAAMC,WAmGlC2B,EAAcnD,aAAe,CAC3BoD,eAAgB,IAGHD,oBC3GfkC,IAASC,OAAO1F,EAAAC,EAAAC,cAACyF,EAAD,MAAmBC,SAASC,eAAe","file":"static/js/main.27795700.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Header = ({ title, subtitle }) => (\r\n  <div className=\"header\">\r\n    <div className=\"container\">\r\n      <h1 className=\"header__title\">{title}</h1>\r\n      {subtitle && <h2 className=\"header__subtitle\">{subtitle}</h2>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nHeader.defaultProps = {\r\n  title: \"Indecision\",\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nclass AddOption extends React.Component {\r\n  state = {\r\n    error: undefined\r\n  }\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const option = e.target.elements.option.value.trim();\r\n    const error = this.props.onAddOption(option);\r\n\r\n    this.setState(() => ({ error: error }));\r\n\r\n    if (!error) {\r\n      e.target.elements.option.value = \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.error && <p className=\"add-option-error\">{this.state.error}</p>}\r\n        <form className=\"add-option\" onSubmit={this.handleFormSubmit}>\r\n          {this.state.error\r\n            ? <input className=\"add-option__input\" type=\"text\" name=\"option\" style={{ borderColor: \"red\" }} />\r\n            : <input className=\"add-option__input\" type=\"text\" name=\"option\" />}\r\n          <button className=\"button\">Add option</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddOption;","import React from \"react\";\r\n\r\nconst Actions = ({ hasOptions, onMakeDecision }) => (\r\n  <div>\r\n    <button\r\n      className=\"big-button\"\r\n      disabled={!hasOptions}\r\n      onClick={onMakeDecision}>What should I do?</button>\r\n\r\n  </div>\r\n);\r\n\r\n\r\nexport default Actions;","import React from \"react\";\r\n\r\nconst Option = ({ option, onRemoveOption, count }) => (\r\n  <li className=\"option\">\r\n    <p className=\"option__text\">{count}. {option}</p>\r\n    <button\r\n      className=\"button button--link\"\r\n      onClick={() => onRemoveOption(option)}>\r\n      remove\r\n    </button>\r\n  </li>\r\n);\r\n\r\n\r\nexport default Option;","import React from \"react\";\r\nimport Option from \"./Option\";\r\n\r\nconst Options = ({ hasOptions, options, onRemoveAll, onRemoveOption }) => (\r\n  <div>\r\n    <div className=\"widget-header\">\r\n      <h3 className=\"widget-header__title\">Your Options</h3>\r\n      <button\r\n        className=\"button button--link\"\r\n        disabled={!hasOptions}\r\n        onClick={onRemoveAll}>Remove All</button>\r\n    </div>\r\n\r\n    {!hasOptions && <p className=\"widget__message\">Please add an option to get started</p>}\r\n\r\n    {options.map((option, index) =>\r\n      <Option\r\n        key={option}\r\n        option={option}\r\n        count={index + 1}\r\n        onRemoveOption={onRemoveOption} />)}\r\n  </div>\r\n);\r\n\r\n\r\nexport default Options;","import React from \"react\";\r\nimport Modal from 'react-modal';\r\n\r\n// const customStyles = {\r\n//   content: {\r\n//     backgroundColor: \"#333745\",\r\n//     border: \"none\",\r\n//     color: \"white\",\r\n//     top: '50%',\r\n//     left: '50%',\r\n//     right: 'auto',\r\n//     bottom: 'auto',\r\n//     transform: 'translate(-50%, -50%)',\r\n//   },\r\n//   overlay: {\r\n//     backgroundColor: \"rgba(0,0,0, 0.75)\",\r\n//   },\r\n// };\r\n\r\nconst OptionModal = ({ onCloseModal, selectedOption, showModal }) => (\r\n  <Modal\r\n    isOpen={showModal}\r\n    onRequestClose={onCloseModal} // onRequestClose makes the modal close on ECS or overlay click, even if nothing is defined in the eventfunction\r\n    contentLabel=\"Selected Option\"\r\n    closeTimeoutMS={200}\r\n    // style={customStyles}\r\n    className=\"modal\"\r\n  >\r\n    <h3 className=\"modal__title\">Selected Option</h3>\r\n    <p className=\"modal__body\">{selectedOption}</p>\r\n    <button className=\"button\" onClick={onCloseModal}>Okay</button>\r\n  </Modal>\r\n);\r\n\r\nexport default OptionModal;","import React from 'react';\nimport Header from \"../components/Header\";\nimport AddOption from \"../components/AddOption\";\nimport Action from \"../components/Action\";\nimport Options from \"../components/Options\";\nimport OptionModal from \"../components/OptionModal\";\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root'); // Needed for screen-readers\n\nclass IndecisionApp extends React.Component {\n  state = {\n    options: this.props.defaultOptions,\n    selectedOption: undefined,\n    showModal: false\n  };\n\n  addOptionRef = React.createRef(); // to change the error state in AddOption-Component from the parent (ONLY works with Class-Components)\n\n  // Eventhandlers ==============================================================================================\n  onAddOption = (option) => {\n    if (!option) { // error handling -> value is empty, or already present in state\n      return \"Enter valid value to add item\"; // return error message to the child component -> display message in child\n    } else if (this.state.options.indexOf(option) >= 0) {\n      return \"This options already exists\";\n    }\n\n    this.setState(() => ({ options: this.state.options.concat(option) })); // concat because it creates a NEW array so we don't modify the prevState directly\n  };\n\n  onRemoveAll = () => {\n    this.setState(() => ({ options: [] }));\n    this.addOptionRef.current.setState(() => ({ error: undefined }));  // change error-state in add-option component\n  };\n\n  onMakeDecision = () => {\n    const random = Math.floor(Math.random() * this.state.options.length);\n    this.setState(() => ({\n      selectedOption: this.state.options[random],\n      showModal: true\n    }));\n  };\n\n  onRemoveOption = (optionToRemove) => {\n    const newOptions = this.state.options.filter(option => option !== optionToRemove);\n    this.setState(() => ({ options: newOptions }));\n  };\n\n  onCloseModal = () => {\n    this.setState(() => ({ showModal: false }));\n  };\n\n\n  // Lifecycles ==============================================================================================\n  componentDidMount = () => {\n    try {\n      const storedOptions = JSON.parse(localStorage.getItem(\"options\"));\n      if (storedOptions !== null) {\n        this.setState(() => ({ options: storedOptions }));\n      }\n    } catch (e) {\n      // Do nothing\n    }\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevState.options.length !== this.state.options.length) {\n      localStorage.setItem(\"options\", JSON.stringify(this.state.options));\n    };\n  };\n\n  componentWillUnmount = () => {\n    console.log(\"willUnmount\");\n  };\n\n  // render ==============================================================================================\n  render() {\n    const subtitle = \"Put your life in the hands of a computer\";\n    const hasOptions = this.state.options.length > 0;\n    return (\n      <div>\n        <Header\n          subtitle={subtitle} />\n        <div className=\"container\">\n          <Action\n            hasOptions={hasOptions}\n            onMakeDecision={this.onMakeDecision} />\n          <div className=\"widget\">\n            <Options\n              hasOptions={hasOptions}\n              options={this.state.options}\n              onRemoveAll={this.onRemoveAll}\n              onRemoveOption={this.onRemoveOption} />\n            <AddOption\n              ref={this.addOptionRef}\n              onAddOption={this.onAddOption} />\n          </div>\n        </div>\n        <OptionModal\n          onCloseModal={this.onCloseModal}\n          selectedOption={this.state.selectedOption}\n          showModal={this.state.showModal}\n        />\n      </div>\n    );\n  };\n};\n\n// defaults ==============================================================================================\nIndecisionApp.defaultProps = {\n  defaultOptions: [],\n};\n\nexport default IndecisionApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport IndecisionApp from './container/IndecisionApp';\nimport \"normalize.css\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(<IndecisionApp />, document.getElementById('root'));"],"sourceRoot":""}